library(factoextra) # install.packages("factoextra")
knitr::opts_chunk$set(fig.asp = 1.2, fig.align = "center", message=FALSE, out.width = "70%")
knitr::opts_chunk$set(fig.asp = 1.2, fig.align = "center", message=FALSE, out.width = "70%")
knitr::opts_chunk$set(fig.asp = 1.2, fig.align = "center", message=FALSE, out.width = "70%")
install.packages("factoextra")
install.packages("factoextra")
#knitr::opts_chunk$set(root.dir='Users/devinwilson/Documents/715/week-13-hw-dkwilson27') # change for your root directory)
# read in data
read.csv('/data/UESI.csv')
#knitr::opts_chunk$set(root.dir='Users/devinwilson/Documents/715/week-13-hw-dkwilson27') # change for your root directory)
# read in data
read.csv(/data/UESI.csv)
#knitr::opts_chunk$set(root.dir='Users/devinwilson/Documents/715/week-13-hw-dkwilson27') # change for your root directory)
# read in data
read.csv(data/UESI.csv)
#knitr::opts_chunk$set(root.dir='Users/devinwilson/Documents/715/week-13-hw-dkwilson27') # change for your root directory)
# read in data
read.csv('data/UESI.csv')
#knitr::opts_chunk$set(root.dir='Users/devinwilson/Documents/715/week-13-hw-dkwilson27') # change for your root directory)
# read in data
UESI <- read.csv('data/UESI.csv')
View(UESI)
#knitr::opts_chunk$set(root.dir='Users/devinwilson/Documents/715/week-13-hw-dkwilson27') # change for your root directory)
glimpse(UESI)
#knitr::opts_chunk$set(root.dir='Users/devinwilson/Documents/715/week-13-hw-dkwilson27') # change for your root directory)
library(tidyverse)
library(ggplot2)
library(patchwork)
library(GGally)
glimpse(UESI)
glimpse(UESI)
#knitr::opts_chunk$set(root.dir='Users/devinwilson/Documents/715/week-13-hw-dkwilson27') # change for your root directory)
summary(UESI)
#knitr::opts_chunk$set(root.dir='Users/devinwilson/Documents/715/week-13-hw-dkwilson27') # change for your root directory)
vis_miss(UESI)
#knitr::opts_chunk$set(root.dir='Users/devinwilson/Documents/715/week-13-hw-dkwilson27') # change for your root directory)
vis_dat(UESI)
library(visdat)
vis_dat(UESI)
#knitr::opts_chunk$set(root.dir='Users/devinwilson/Documents/715/week-13-hw-dkwilson27') # change for your root directory)
UESI.matrix <- subset('City','continent')
#knitr::opts_chunk$set(root.dir='Users/devinwilson/Documents/715/week-13-hw-dkwilson27') # change for your root directory)
UESI.matrix <- subset(UESI, select = -('City','continent'))
#knitr::opts_chunk$set(root.dir='Users/devinwilson/Documents/715/week-13-hw-dkwilson27') # change for your root directory)
UESI.matrix <- subset(UESI, select = -('City,continent'))
#knitr::opts_chunk$set(root.dir='Users/devinwilson/Documents/715/week-13-hw-dkwilson27') # change for your root directory)
UESI.matrix <- subset(UESI, select = -c('City','continent'))
#knitr::opts_chunk$set(root.dir='Users/devinwilson/Documents/715/week-13-hw-dkwilson27') # change for your root directory)
UESI.matrix <- subset(UESI, select = -c("City","continent"))
#knitr::opts_chunk$set(root.dir='Users/devinwilson/Documents/715/week-13-hw-dkwilson27') # change for your root directory)
UESI.matrix <- subset(UESI, select = -c(City,continent))
View(UESI.matrix)
#knitr::opts_chunk$set(root.dir='Users/devinwilson/Documents/715/week-13-hw-dkwilson27') # change for your root directory)
UESI.scaled <- scale(UESI.matrix)
View(UESI.scaled)
#knitr::opts_chunk$set(root.dir='Users/devinwilson/Documents/715/week-13-hw-dkwilson27') # change for your root directory)
UESI.scaled <- scale(UESI.matrix, c(NA))
#knitr::opts_chunk$set(root.dir='Users/devinwilson/Documents/715/week-13-hw-dkwilson27') # change for your root directory)
na.omit(UESI.scaled)
distance <- get_dist(UESI.scaled)
#knitr::opts_chunk$set(root.dir='Users/devinwilson/Documents/715/week-13-hw-dkwilson27') # change for your root directory)
install.packages("factoextra")
source("Unit_13_functions.R")
library(factoextra)
install.packages("factoextra")
source("Unit_13_functions.R")
library(factoextra) # install.packages("factoextra")
# make sure you have this downloaded to your main project folder
knitr::opts_chunk$set(fig.asp = 1.2, fig.align = "center", message=FALSE, out.width = "70%")
distance <- get_dist(UESI.scaled)
fviz_dist(distance, gradient = list(low = "#00AFBB", mid = "white", high = "#FC4E07"))
install.packages("factoextra")
# Custom Week 13 function
UESI.scaled %>%
wssplot(.)
#knitr::opts_chunk$set(root.dir='Users/devinwilson/Documents/715/week-13-hw-dkwilson27') # change for your root directory)
# Custom Week 13 function
UESI.scaled %>%
wssplot(1)
#knitr::opts_chunk$set(root.dir='Users/devinwilson/Documents/715/week-13-hw-dkwilson27') # change for your root directory)
UESI.scaled %>%
wssplot(.)
#knitr::opts_chunk$set(root.dir='Users/devinwilson/Documents/715/week-13-hw-dkwilson27') # change for your root directory)
UESI.scaled <- scale(UESI.matrix) %>% na.omit(UESI.scaled)
# Custom Week 13 function
UESI.scaled %>%
wssplot(.)
# Or using factoextra function
set.seed(123)
fviz_nbclust(UESI.scaled, kmeans, method = "wss")
#knitr::opts_chunk$set(root.dir='Users/devinwilson/Documents/715/week-13-hw-dkwilson27') # change for your root directory)
kmeans(UESI.scaled)
#knitr::opts_chunk$set(root.dir='Users/devinwilson/Documents/715/week-13-hw-dkwilson27') # change for your root directory)
kmeans(4)
#knitr::opts_chunk$set(root.dir='Users/devinwilson/Documents/715/week-13-hw-dkwilson27') # change for your root directory)
kmeans(n_clusters=4)
#knitr::opts_chunk$set(root.dir='Users/devinwilson/Documents/715/week-13-hw-dkwilson27') # change for your root directory)
kmeans(n_clusters = 4)
#knitr::opts_chunk$set(root.dir='Users/devinwilson/Documents/715/week-13-hw-dkwilson27') # change for your root directory)
kmeans(n_clusters = '4')
#knitr::opts_chunk$set(root.dir='Users/devinwilson/Documents/715/week-13-hw-dkwilson27') # change for your root directory)
kmeans(n_clusters = "4")
kmeans(n_clusters = "4")
UESI.scaled %>%
mutate(cluster = k4$cluster,
city = row.names(UESI.scaled)) %>%
ggplot(aes(CO2.UESI, UHI.UESI, color = factor(cluster), label = city)) +
geom_text() +
theme_bw()
#knitr::opts_chunk$set(root.dir='Users/devinwilson/Documents/715/week-13-hw-dkwilson27') # change for your root directory)
kmeans(UESI.scaled, n_clusters = "4")
#knitr::opts_chunk$set(root.dir='715/devinwilson/Documents/715/week-12-hw-dwilson27') # change for your root directory)
data <- data %>% mutate(above = case_when(population >= 10188-(10188*.03),
population >= 13584-(13584*.03),
TRUE ~ population >= 16980-(16980*.03)))
cutoff1 <-10188
cutoff2 <- 12584
cutoff3 <- 16980
data <- data %>% mutate(above = case_when(population >= cutoff1 ~ 10188-(10188*.03),
population >= cutoff2 ~ 13584-(13584*.03),
TRUE ~ 16980-(16980*.03)))
library(tidyverse)
library(ggplot2)
library(knitr)
library(patchwork)
library(GGally)
library(skimr)
library(factoextra)
library(ggfortify)
library(magrittr)
source("Unit_13_functions.R")
knitr::opts_chunk$set(fig.asp = 1.2, fig.align = "center", message=FALSE, out.width = "70%")
#knitr::opts_chunk$set(root.dir='Users/devinwilson/Documents/715/week-13-hw-dkwilson27')
UESI.scaled <- UESI.matrix %>% mutate(across(contains("UESI"), scale)) %>%
drop_na()
View(UESI.scaled)
#knitr::opts_chunk$set(root.dir='~/Documents/GitHub/PLCY715/XXXXXXX') # change for your root directory)
UESI.scaled <- UESI.matrix %>%   #alternative - use df %>% dplyr::select_if(is.numeric)
# mutate_at(vars(contains("UESI")), funs(scale(.))) %>% # updated way is to use 'across'
mutate(across(contains("UESI"), scale)) %>%
drop_na()
View(UESI.scaled)
df.pca <- UESI.scaled
View(UESI)
PC_1 = phi_1{CO2.UESI} + phi_{NO2.UESI} + phi_{PM25.UESI}
PC_1 = 0.595{CO2.UESI} + 0.973{NO2.UESI} + 0.995{PM25.UESI}
library(tidyverse)
library(ggplot2)
library(knitr)
library(patchwork)
library(GGally)
library(skimr)
library(factoextra)
library(ggfortify)
library(magrittr)
source("Unit_13_functions.R")
knitr::opts_chunk$set(fig.asp = 1.2, fig.align = "center", message=FALSE, out.width = "70%")
#knitr::opts_chunk$set(root.dir='Users/devinwilson/Documents/715/week-13-hw-dkwilson27')
pca.out<-prcomp(UESI.scaled,scale=TRUE)
pca.out
(.3218)+(.4284)+(.4322)
pca.out
(.321)+(.428)+(.432)
pca.out<-prcomp(UESI.scaled,scale=TRUE)
pca.out
# Calculate PC scores for cities
PC1 <- as.matrix(df.pca %>% dplyr::select(contains("UESI"))) %*% as.matrix(pca.city.UESI$rotation[,1]) # %*% is matrix multiplication
library(tidyverse)
library(ggplot2)
library(knitr)
library(patchwork)
library(GGally)
library(skimr)
library(factoextra)
library(ggfortify)
library(magrittr)
source("Unit_13_functions.R")
knitr::opts_chunk$set(fig.asp = 1.2, fig.align = "center", message=FALSE, out.width = "70%")
source("Unit_13_functions.R")
library(tidyverse)
library(ggplot2)
library(knitr)
library(patchwork)
library(GGally)
library(skimr)
library(factoextra)
library(ggfortify)
library(magrittr)
source("Unit_13_functions.R")
knitr::opts_chunk$set(fig.asp = 1.2, fig.align = "center", message=FALSE, out.width = "70%")
#knitr::opts_chunk$set(root.dir='Users/devinwilson/Documents/715/week-13-hw-dkwilson27')
UESI <- read.csv('data/UESI.csv')
UESI.scaled <- UESI.scaled <- UESI %>%
magrittr::set_rownames(.$City)  %>%
dplyr::select_if(is.numeric) %>% #alternative - use df %>% dplyr::select_if(is.numeric)
# mutate_at(vars(contains("UESI")), funs(scale(.))) %>% # updated way is to use 'across'
mutate(across(-contains("UESI"), scale)) %>%
dplyr::select(-contains("UESI")) %>%
drop_na()
pca.UESI <- prcomp(UESI.scaled %>% select(-contains("UESI")))
scree_plot2 <- data.frame(summary(pca.UESI)$importance) %>%
mutate(metric = row.names(.)) %>%
filter(metric == "Proportion of Variance") %>%
pivot_longer(!c("metric"), names_to="PC", values_to="Prop") %>%
mutate(PC = fct_reorder(PC, -Prop)) %>%
ungroup() %>%
ggplot(aes(x=PC, y=Prop, group=1)) +
geom_line() +
geom_point() +
labs(title="Scree Plot") +
theme_bw()
k7 <- kmeans(pca.UESI %>% dplyr::select(contains("UESI")), centers = 7, nstart = 1000,
algorithm = 'Lloyd')
k7 <- kmeans(pca.UESI %>% dplyr::select(-contains("UESI")), centers = 7, nstart = 1000,
algorithm = 'Lloyd')
get_pca_var(pca.UESI)$contrib
k7 <- kmeans(pca.UESI %>% dplyr::select(-contains("UESI")), centers = 7, nstart = 1000,
algorithm = 'Lloyd')
library(tidyverse)
library(ggplot2)
library(knitr)
library(patchwork)
library(GGally)
library(skimr)
library(factoextra)
library(ggfortify)
library(magrittr)
source("Unit_13_functions.R")
knitr::opts_chunk$set(fig.asp = 1.2, fig.align = "center", message=FALSE, out.width = "70%")
#knitr::opts_chunk$set(root.dir='Users/devinwilson/Documents/715/week-13-hw-dkwilson27')
get_pca_var(pca.UESI)$contrib
k7 <- kmeans(pca.UESI %>% dplyr::select(-contains("UESI")), centers = 7, nstart = 1000,
algorithm = 'Lloyd')
library(tidyverse)
library(ggplot2)
library(knitr)
library(patchwork)
library(GGally)
library(skimr)
library(factoextra)
library(ggfortify)
library(magrittr)
source("Unit_13_functions.R")
knitr::opts_chunk$set(fig.asp = 1.2, fig.align = "center", message=FALSE, out.width = "70%")
#knitr::opts_chunk$set(root.dir='Users/devinwilson/Documents/715/week-13-hw-dkwilson27')
k7 <- kmeans(pca.UESI %>% dplyr::select(-contains("UESI")), centers = 7, nstart = 1000,
algorithm = 'Lloyd')
get_pca_var(pca.UESI)$contrib
k7 <- kmeans(pca.UESI %>% dplyr::-select(contains("UESI")), centers = 7, nstart = 1000,
k7 <- kmeans(pca.UESI %>% dplyr::select(-contains("UESI")), centers = 7, nstart = 1000,
algorithm = 'Lloyd')
k7 <- kmeans(pca.UESI %>% centers = 7, nstart = 1000,
k7 <- kmeans(pca.UESI %>% dplyr::select(-contains("UESI")), centers = 7, nstart = 1000,
algorithm = 'Lloyd')
k7 <- kmeans(pca.UESI %>% select(-contains("UESI")), centers = 7, nstart = 1000,
algorithm = 'Lloyd')
k4 <- kmeans(df.pca %>% dplyr::select(contains("UESI")), centers = 4, nstart = 1000,
algorithm = 'Lloyd')
View(df.pca)
pca.city.UESI <- prcomp(df.pca %>% select(contains("UESI")))
View(pca.city.UESI)
View(pca.UESI)
k7 <- kmeans(df.pca %>% dplyr::select(-contains("UESI")), centers = 7, nstart = 1000,
algorithm = 'Lloyd')
fviz_cluster(k7, data = df.pca %>% dplyr::select(-contains("UESI")),
palette = c("#FF0000", "#00A08A", "#F2AD00", "#5BBCD6"),
star.plot = TRUE, # Add segments from centroids to items
repel = TRUE) + # Avoid label overplotting (slow)
scale_shape_manual(values=c(15,16,17,18))+
ggtitle('K-means Clustering', subtitle='across first two Principal Components') +
guides(fill = guide_legend(override.aes = aes(label = "")))+
theme_classic() +
theme(legend.position="right")
fviz_cluster(k7, data = df.pca %>% dplyr::select(-contains("UESI")),
palette = c("#FF0000", "#00A08A", "#F2AD00", "#5BBCD6"),
star.plot = TRUE, # Add segments from centroids to items
repel = TRUE) + # Avoid label overplotting (slow)
scale_shape_manual(values=c(15,16,17,18))+
ggtitle('K-means Clustering') +
guides(fill = guide_legend(override.aes = aes(label = "")))+
theme_classic() +
theme(legend.position="right")
library(RColorBrewer)
display.brewer.all()
fviz_cluster(k7, data = df.pca %>% dplyr::select(-contains("UESI")),
palette = c("#1B9E77", "#D95F02", "#7570B3", "#E7298A"),
star.plot = TRUE, # Add segments from centroids to items
repel = TRUE) + # Avoid label overplotting (slow)
scale_shape_manual(values=c(15,16,17,18))+
ggtitle('K-means Clustering') +
guides(fill = guide_legend(override.aes = aes(label = "")))+
theme_classic() +
theme(legend.position="right")
fviz_cluster(k7, data = df.pca %>% dplyr::select(-contains("UESI")),
palette = c("#1B9E77", "#D95F02", "#7570B3", "#E7298A", "#66A61E", "#E6AB02", "#A6761D"),
star.plot = TRUE, # Add segments from centroids to items
repel = TRUE) + # Avoid label overplotting (slow)
scale_shape_manual(values=c(15,16,17,18))+
ggtitle('K-means Clustering') +
guides(fill = guide_legend(override.aes = aes(label = "")))+
theme_classic() +
theme(legend.position="right")
fviz_cluster(k7, data = df.pca %>% dplyr::select(-contains("UESI")),
palette = c("#1B9E77", "#D95F02", "#7570B3", "#E7298A", "#66A61E", "#E6AB02", "#A6761D"),
star.plot = TRUE, # Add segments from centroids to items
repel = TRUE) + # Avoid label overplotting (slow)
scale_shape_manual(values=c(15,16,17,18,19,20,21))+
ggtitle('K-means Clustering') +
guides(fill = guide_legend(override.aes = aes(label = "")))+
theme_classic() +
theme(legend.position="right")
# Calculate PC scores for cities
PC1 <- as.matrix(pca.UESI %>% dplyr::select(-contains("UESI"))) %*% as.matrix(pca.UESI$rotation[,1]) # %*% is matrix multiplication
# Calculate PC scores for cities
PC1 <- as.matrix(df.pca %>% dplyr::select(-contains("UESI"))) %*% as.matrix(pca.UESI$rotation[,1]) # %*% is matrix multiplication
PC2 <- as.matrix(df.pca %>% dplyr::select(-contains("UESI"))) %*% as.matrix(pca.UESI$rotation[,2])
# first create a dataframe so we can include city names
PC <- data.frame(City = row.names(pca.UESI), continent = pca.UESI$continent, PC1, PC2)
# first create a dataframe so we can include city names
PC <- data.frame(City = row.names(df.pca), continent = pca.UESI$continent, PC1, PC2)
# first create a dataframe so we can include city names
PC <- data.frame(City = row.names(df.pca), continent = df.pca$continent, PC1, PC2)
# Calculate PC scores for cities
PC1 <- as.matrix(df.pca %>% dplyr::select(-contains("UESI"))) %*% as.matrix(pca.UESI$rotation[,1]) # %*% is matrix multiplication
PC2 <- as.matrix(df.pca %>% dplyr::select(-contains("UESI"))) %*% as.matrix(pca.UESI$rotation[,2])
# first create a dataframe so we can include city names
PC <- data.frame(City = row.names(df.pca), continent = df.pca$continent, PC1, PC2)
get_pca_var(pca.UESI)$contrib
knitr::opts_chunk$set(root.dir='Users/devinwilson/Documents/EDF/Flood_Analysis_PLCY_698') # change for your root directory)
p1 <- data %>%
filter(!is.na(city_town)) %>%
filter(!is.na(grant_award)) %>%
ggplot(aes(fill=total_percent_of_land_at_some_level_of_flood_risk, y=city_town, color=city_town)) + labs(y = "City/Town", x = "Percent of Land at Flood Risk", title = "Percent of Land at Flood Risk in each City/Town") + geom_bar(show.legend = FALSE)
library(tidyverse)
library(ggplot2)
library(patchwork)
library(GGally)
library(tidyverse)
library(janitor)
setwd('/Users/devinwilson/Documents/EDF/Flood_Analysis_PLCY_698')
getwd()
data <- read_csv('final_data_with_golden_leaf.csv')
data <- clean_names(data)
p1 <- data %>%
filter(!is.na(city_town)) %>%
filter(!is.na(grant_award)) %>%
ggplot(aes(fill=total_percent_of_land_at_some_level_of_flood_risk, y=city_town, color=city_town)) + labs(y = "City/Town", x = "Percent of Land at Flood Risk", title = "Percent of Land at Flood Risk in each City/Town") + geom_bar(show.legend = FALSE)
p2 <- data %>%
filter(!is.na(city_town)) %>%
filter(!is.na(grant_award)) %>%
ggplot(aes(y=city_town, fill=grant_award)) + labs(y = "City/Town", x = "Grant Award in Thousands", title = "Grant Awarded to Each City/Town", fill="Grant Awarded") + theme_classic() + geom_bar()
p1 + p2
View(p1)
View(PC1)
View(PC2)
p1 <- data %>%
filter(!is.na(city_town)) %>%
filter(!is.na(grant_award)) %>%
ggplot(aes(fill=total_percent_of_land_at_some_level_of_flood_risk, y=city_town, color=city_town)) + labs(y = "City/Town", x = "Percent of Land at Flood Risk", title = "Percent of Land at Flood Risk in each City/Town") + geom_bar(show.legend = FALSE)
View(p1)
view(p1)
View(p1)
data %>%
filter(!is.na(city_town)) %>%
filter(!is.na(grant_award)) %>%
ggplot(aes(fill=total_percent_of_land_at_some_level_of_flood_risk, y=city_town, color=city_town)) + labs(y = "City/Town", x = "Percent of Land at Flood Risk", title = "Percent of Land at Flood Risk in each City/Town") + geom_bar(show.legend = FALSE)
data %>%
filter(!is.na(city_town)) %>%
filter(!is.na(grant_award)) %>%
ggplot(aes(y=city_town, fill=grant_award)) + labs(y = "City/Town", x = "Grant Award in Thousands", title = "Grant Awarded to Each City/Town", fill="Grant Awarded") + theme_classic() + geom_bar()
#Bar Plot visualizing the CDC social vulnerability index of the communities which received funding
data %>%
filter(!is.na(city_town)) %>%
filter(!is.na(grant_award)) %>%
ggplot(aes(y=city_town, fill=per_capita_income_in_2020_inflation_adjusted_dollars, color=city_town)) + labs(y = "City/Town", x = "Social Vulnerability Index", title = "CDC social vulnerability index of communities who Recieved Grants", fill="Grant Award", log="y") + theme_classic() + geom_bar(show.legend = FALSE)
#Bar Plot visualizing the CDC social vulnerability index of the communities which received funding
data %>%
filter(!is.na(city_town)) %>%
filter(!is.na(grant_award)) %>%
ggplot(aes(y=city_town, fill=per_capita_income_in_2020_inflation_adjusted_dollars, color=city_town)) + labs(y = "City/Town", x = "Per Capita Income in 2020", title = "Per Capita Income of communities who Recieved Grants", Subtitle="Income in 2020 Inflation Adjusted Dollars") + theme_classic() + geom_bar(show.legend = FALSE)
#Bar Plot visualizing the Per Capita Income of communities who Recieved Grants
data %>%
filter(!is.na(city_town)) %>%
filter(!is.na(grant_award)) %>%
ggplot(aes(y=city_town, fill=per_capita_income_in_2020_inflation_adjusted_dollars, color=city_town)) + labs(y = "City/Town", x = "Per Capita Income in 2020", title = "Per Capita Income of communities who Recieved Grants", subtitle = ="Income in 2020 Inflation Adjusted Dollars") + theme_classic() + geom_bar(show.legend = FALSE)
#Bar Plot visualizing the Per Capita Income of communities who Recieved Grants
data %>%
filter(!is.na(city_town)) %>%
filter(!is.na(grant_award)) %>%
ggplot(aes(y=city_town, fill=per_capita_income_in_2020_inflation_adjusted_dollars, color=city_town)) + labs(y = "City/Town", x = "Per Capita Income in 2020", title = "Per Capita Income of communities who Recieved Grants", subtitle  ="Income in 2020 Inflation Adjusted Dollars") + theme_classic() + geom_bar(show.legend = FALSE)
#Bar Plot visualizing the Per Capita Income of communities who Recieved Grants
data %>%
filter(!is.na(city_town)) %>%
filter(!is.na(grant_award)) %>%
ggplot(aes(y=city_town, fill=per_capita_income_in_2020_inflation_adjusted_dollars)) + labs(y = "City/Town", x = "Per Capita Income in 2020", title = "Per Capita Income of communities who Recieved Grants", subtitle  ="Income in 2020 Inflation Adjusted Dollars") + theme_classic() + geom_bar(show.legend = FALSE)
#Bar Plot visualizing the Per Capita Income of communities who Recieved Grants
data %>%
filter(!is.na(city_town)) %>%
filter(!is.na(grant_award)) %>%
ggplot(aes(y=city_town, fill=per_capita_income_in_2020_inflation_adjusted_dollars, color= city_town)) + labs(y = "City/Town", x = "Per Capita Income in 2020", title = "Per Capita Income of communities who Recieved Grants", subtitle  ="Income in 2020 Inflation Adjusted Dollars") + theme_classic() + geom_bar(show.legend = FALSE)
#Bar Plot visualizing the Per Capita Income of communities who Recieved Grants
data %>%
filter(!is.na(city_town)) %>%
filter(!is.na(grant_award)) %>%
ggplot(aes(y=city_town, fill=per_capita_income_in_2020_inflation_adjusted_dollars, color= city_town)) + labs(y = "City/Town", x = "Per Capita Income in 2020", title = "Per Capita Income of communities who Recieved Grants", subtitle  ="Income in 2020 Inflation Adjusted Dollars") + geom_bar(show.legend = FALSE)
library(RColorBrewer)
coul <- brewer.pal(5, "Set2")
data %>%
filter(!is.na(city_town)) %>%
filter(!is.na(grant_award)) %>%
ggplot(aes(y=city_town, fill=per_capita_income_in_2020_inflation_adjusted_dollars, color= city_town)) + labs(y = "City/Town", x = "Per Capita Income in 2020", title = "Per Capita Income of communities who Recieved Grants", subtitle  ="Income in 2020 Inflation Adjusted Dollars") + geom_bar(show.legend = FALSE, col= coul)
data %>%
filter(!is.na(city_town)) %>%
filter(!is.na(grant_award)) %>%
ggplot(aes(y=city_town, fill=per_capita_income_in_2020_inflation_adjusted_dollars, color= city_town)) + labs(y = "City/Town", x = "Per Capita Income in 2020", title = "Per Capita Income of communities who Recieved Grants", subtitle  ="Income in 2020 Inflation Adjusted Dollars") + geom_bar(show.legend = FALSE)
#Bar Plot visualizing the Per Capita Income of communities who Recieved Grants
library(RColorBrewer)
coul <- brewer.pal(5, "Set2")
data %>%
filter(!is.na(city_town)) %>%
filter(!is.na(grant_award)) %>%
ggplot(aes(y=city_town, fill=per_capita_income_in_2020_inflation_adjusted_dollars, color= city_town)) + labs(y = "City/Town", x = "Per Capita Income in 2020", title = "Per Capita Income of communities who Recieved Grants", subtitle  ="Income in 2020 Inflation Adjusted Dollars") + geom_bar(show.legend = FALSE, fill = "#0099f9")
#Bar Plot visualizing the Per Capita Income of communities who Recieved Grants
data %>%
filter(!is.na(city_town)) %>%
filter(!is.na(grant_award)) %>%
ggplot(aes(y=city_town, fill=per_capita_income_in_2020_inflation_adjusted_dollars, color= city_town)) + labs(y = "City/Town", x = "Per Capita Income in 2020", title = "Per Capita Income of communities who Recieved Grants", subtitle  ="Income in 2020 Inflation Adjusted Dollars") + geom_bar(show.legend = FALSE)
#Bar Plot visualizing the Per Capita Income of communities who Recieved Grants
data %>%
filter(!is.na(city_town)) %>%
filter(!is.na(grant_award)) %>%
ggplot(aes(y=city_town, fill=per_capita_income_in_2020_inflation_adjusted_dollars, color= city_town)) + labs(y = "City/Town", x = "Per Capita Income in 2020", title = "Per Capita Income of communities who Recieved Grants", subtitle  ="Income in 2020 Inflation Adjusted Dollars") + geom_bar(show.legend = FALSE, stat="identity")
#Bar Plot visualizing the Per Capita Income of communities who Recieved Grants
data %>%
filter(!is.na(city_town)) %>%
filter(!is.na(grant_award)) %>%
ggplot(aes(y=city_town, fill=per_capita_income_in_2020_inflation_adjusted_dollars, color= city_town)) + labs(y = "City/Town", x = "Per Capita Income in 2020", title = "Per Capita Income of communities who Recieved Grants", subtitle  ="Income in 2020 Inflation Adjusted Dollars") + geom_bar(show.legend = FALSE, fill="cyan4")
#Bar Plot visualizing the Per Capita Income of communities who Recieved Grants
data %>%
filter(!is.na(city_town)) %>%
filter(!is.na(grant_award)) %>%
ggplot(aes(y=city_town, fill=per_capita_income_in_2020_inflation_adjusted_dollars)) + labs(y = "City/Town", x = "Per Capita Income in 2020", title = "Per Capita Income of communities who Recieved Grants", subtitle  ="Income in 2020 Inflation Adjusted Dollars") + geom_bar(show.legend = FALSE, fill="cyan4")
#Bar Plot visualizing the Per Capita Income of communities who Recieved Grants
data %>%
filter(!is.na(city_town)) %>%
filter(!is.na(grant_award)) %>%
ggplot(aes(y=city_town, fill=per_capita_income_in_2020_inflation_adjusted_dollars)) + labs(y = "City/Town", x = "Per Capita Income in 2020", title = "Per Capita Income of communities who Recieved Grants", subtitle  ="Income in 2020 Inflation Adjusted Dollars") + geom_bar(show.legend = FALSE, fill="darkorchid")
#Bar Plot visualizing the Per Capita Income of communities who Recieved Grants
data %>%
filter(!is.na(city_town)) %>%
filter(!is.na(grant_award)) %>%
ggplot(aes(y=city_town, fill=per_capita_income_in_2020_inflation_adjusted_dollars)) + labs(y = "City/Town", x = "Per Capita Income in 2020", title = "Per Capita Income of communities who Recieved Grants", subtitle  ="Income in 2020 Inflation Adjusted Dollars") + geom_bar(show.legend = FALSE, fill="blanchedalmond")
#Bar Plot visualizing the Per Capita Income of communities who Recieved Grants
data %>%
filter(!is.na(city_town)) %>%
filter(!is.na(grant_award)) %>%
ggplot(aes(y=city_town, fill=per_capita_income_in_2020_inflation_adjusted_dollars)) + labs(y = "City/Town", x = "Per Capita Income in 2020", title = "Per Capita Income of communities who Recieved Grants", subtitle  ="Income in 2020 Inflation Adjusted Dollars") + geom_bar(show.legend = FALSE, fill="cyan4")
data %>%
filter(!is.na(city_town)) %>%
filter(!is.na(grant_award)) %>%
ggplot(aes(fill=total_percent_of_land_at_some_level_of_flood_risk, y=city_town, color=city_town)) + labs(y = "City/Town", x = "Percent of Land at Flood Risk", title = "Percent of Land at Flood Risk in each City/Town") + geom_bar(show.legend = FALSE)
data %>%
filter(!is.na(city_town)) %>%
filter(!is.na(grant_award)) %>%
ggplot(aes(fill=total_percent_of_land_at_some_level_of_flood_risk, y=city_town, color=city_town)) + labs(y = "City/Town", x = "Percent of Land at Flood Risk", title = "Percent of Land at Flood Risk in each City/Town", subtitle = "Communtities Which Recieved Funding") + geom_bar(show.legend = FALSE)
#Bar Plot visualizing the Per Capita Income of communities who Recieved Grants
data %>%
filter(is.na(city_town)) %>%
filter(is.na(grant_award)) %>%
ggplot(aes(y=city_town, fill=per_capita_income_in_2020_inflation_adjusted_dollars)) + labs(y = "City/Town", x = "Per Capita Income in 2020", title = "Per Capita Income of communities who did not Recieved Grants", subtitle  ="Income in 2020 Inflation Adjusted Dollars") + geom_bar(show.legend = FALSE, fill="cyan4")
library(tidyverse)
library(ggplot2)
library(patchwork)
library(GGally)
library(tidyverse)
library(janitor)
setwd('/Users/devinwilson/Documents/EDF/Flood_Analysis_PLCY_698')
getwd()
data <- read_csv('final_data_with_golden_leaf.csv')
data <- clean_names(data)
golden_leaf <- data %>% mutate(select(total_percent_of_land_at_some_level_of_flood_risk:grant_award)) %>% drop_na()
golden_leaf <- data %>% mutate(select(total_percent_of_land_at_some_level_of_flood_risk:grant_award))
golden_leaf <- data %>% select(total_percent_of_land_at_some_level_of_flood_risk:grant_award)
golden_leaf <- data %>% select(total_percent_of_land_at_some_level_of_flood_risk:grant_award) %>% drop_na()
View(golden_leaf)
golden_leaf <- data %>% select(total_percent_of_land_at_some_level_of_flood_risk:grant_award)
golden_leaf %>% filter(!is.na(city_town)) %>%
filter(!is.na(grant_award))
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(root.dir='Users/devinwilson/Documents/EDF/Flood_Analysis_PLCY_698') # change for your root directory)
read_csv('final_data_with_golden_leaf copy.csv')
setwd('/Users/devinwilson/Documents/EDF/Flood_Analysis_PLCY_698')
getwd()
read_csv('final_data_with_golden_leaf_copy.csv')
golden_leaf <- read_csv('final_data_with_golden_leaf_copy.csv')
golden_leaf %>% drop_na()
View(golden_leaf)
golden_leaf %>% filter(!is.na(city_town)) %>%
filter(!is.na(grant_award))
golden_leaf %>% clean_names() %>% filter(!is.na(city_town)) %>%
filter(!is.na(grant_award))
golden_leaf <- golden_leaf %>% clean_names() %>% filter(!is.na(city_town)) %>%
filter(!is.na(grant_award))
write.table(DataToExport, file="golden_leaf.csv", sep",")
write.table(DataToExport, file="golden_leaf.csv", sep=",")
write.table(golden_leaf, file="golden_leaf.csv", sep=",")
write.table(golden_leaf, file="golden_leaf.csv", sep=",")
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(root.dir='Users/devinwilson/Documents/EDF/Flood_Analysis_PLCY_698') # change for your root directory)
setwd('/Users/devinwilson/Documents/EDF/Flood_Analysis_PLCY_698')
getwd()
golden_leaf <- read_csv('final_data_with_golden_leaf_copy.csv')
